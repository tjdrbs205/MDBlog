<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>카테고리 관리 - MDBlog</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/css/categories.css" />
  </head>
  <body>
    <div class="container">
      <h1>카테고리 관리</h1>

      <div class="category-management">
        <!-- 카테고리 추가 폼 -->
        <div class="category-form-container">
          <h3>새 카테고리 추가</h3>
          <form action="/categories" method="POST" class="category-form">
            <% if (typeof csrfToken !== 'undefined') { %>
            <input type="hidden" name="_csrf" value="<%= csrfToken %>" />
            <% } %>
            <div class="form-group">
              <label for="name">카테고리명</label>
              <input type="text" id="name" name="name" placeholder="카테고리명" required />
            </div>

            <div class="form-group">
              <label for="parent">상위 카테고리</label>
              <select name="parent" id="parent">
                <option value="">최상위 카테고리로 생성</option>
                <% allCategories.forEach(category => { %>
                <option value="<%= category._id %>"> <%= category.name %> </option>
                <% }); %>
              </select>
            </div>

            <button type="submit" class="btn btn-primary">추가</button>
          </form>
        </div>

        <!-- 카테고리 목록 -->
        <div class="category-list-container">
          <h3>카테고리 목록</h3>
          <% if (categories && categories.length > 0) { %>
          <ul class="category-tree">
            <%- include('_category_tree', { categories: categories, depth: 0 }) %>
          </ul>
          <% } else { %>
          <p>등록된 카테고리가 없습니다.</p>
          <% } %>
        </div>
      </div>

      <a href="/" class="back-link">← 홈으로</a>

      <!-- 카테고리 수정 모달 -->
      <div id="editCategoryModal" class="modal">
        <div class="modal-content">
          <span class="close">&times;</span>
          <h3>카테고리 수정</h3>
          <form action="/categories/update" method="POST" id="editCategoryForm">
            <input type="hidden" id="editCategoryId" name="id" />
            <% if (typeof csrfToken !== 'undefined') { %>
            <input type="hidden" name="_csrf" value="<%= csrfToken %>" />
            <% } %>
            <div class="form-group">
              <label for="editName">카테고리명</label>
              <input type="text" id="editName" name="name" required />
            </div>
            <div class="form-group">
              <label for="editParent">상위 카테고리</label>
              <select name="parent" id="editParent">
                <option value="">최상위 카테고리로 설정</option>
                <% allCategories.forEach(category => { %>
                <option value="<%= category._id %>"> <%= category.name %> </option>
                <% }); %>
              </select>
            </div>
            <button type="submit" class="btn btn-primary">저장</button>
          </form>
        </div>
      </div>
    </div>

    <script>
      // 카테고리 수정 모달 관련 스크립트
      document.addEventListener("DOMContentLoaded", function () {
        const modal = document.getElementById("editCategoryModal");
        const closeBtn = modal.querySelector(".close");

        // 모달 닫기
        closeBtn.onclick = function () {
          modal.style.display = "none";
        };

        // 모달 외부 클릭 시 닫기
        window.onclick = function (event) {
          if (event.target == modal) {
            modal.style.display = "none";
          }
        };

        // 카테고리 편집 버튼 클릭 이벤트
        document.querySelectorAll(".edit-category").forEach((button) => {
          button.addEventListener("click", function () {
            const id = this.dataset.id;
            const name = this.dataset.name;
            const parent = this.dataset.parent || "";

            document.getElementById("editCategoryId").value = id;
            document.getElementById("editName").value = name;
            document.getElementById("editParent").value = parent;

            // 자기 자신은 부모로 선택할 수 없게 처리
            document
              .querySelectorAll("#editParent option")
              .forEach((option) => {
                option.disabled = option.value === id;
              });

            modal.style.display = "block";
          });
        });

        // 삭제 폼에 CSRF 토큰 추가 (프로덕션 환경에서만 필요함)
        const deleteForms = document.querySelectorAll('.delete-category-form');
        <% if (typeof csrfToken !== 'undefined') { %>
        deleteForms.forEach(form => {
          const csrfInput = document.createElement('input');
          csrfInput.type = 'hidden';
          csrfInput.name = '_csrf';
          csrfInput.value = '<%= csrfToken %>';
          form.appendChild(csrfInput);
        });
        <% } %>

        // AJAX로 삭제 요청 처리
        deleteForms.forEach(form => {
          form.addEventListener('submit', function(e) {
            e.preventDefault();

            if (confirm('정말 이 카테고리를 삭제하시겠습니까? 이 카테고리를 사용하는 게시물이 있거나 하위 카테고리가 있으면 삭제할 수 없습니다.')) {
              const formUrl = this.getAttribute('action');

              fetch(formUrl, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  <% if (typeof csrfToken !== 'undefined') { %>
                  'CSRF-Token': '<%= csrfToken %>'
                  <% } %>
                },
                credentials: 'same-origin'
              })
              .then(response => {
                if (response.redirected) {
                  window.location.href = response.url;
                } else {
                  return response.json();
                }
              })
              .then(data => {
                if (data && data.error) {
                  alert(data.error);
                } else if (data && data.success) {
                  alert(data.success);
                  location.reload();
                }
              })
              .catch(error => {
                console.error('카테고리 삭제 오류:', error);
                alert('카테고리 삭제 중 오류가 발생했습니다.');
              });
            }
          });
        });
      });
    </script>
  </body>
</html>
